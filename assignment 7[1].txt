1)

public class Sort012 {
    public static void main(String[] args) {
        int[] arr1 = {0, 2, 1, 2, 0};
        int[] arr2 = {0, 1, 0};

        System.out.println("Original array 1:");
        printArray(arr1);
        sort012(arr1);
        System.out.println("Sorted array 1:");
        printArray(arr1);

        System.out.println("Original array 2:");
        printArray(arr2);
        sort012(arr2);
        System.out.println("Sorted array 2:");
        printArray(arr2);
    }

    public static void sort012(int[] arr) {
        int low = 0;
        int high = arr.length - 1;
        int mid = 0;

        while (mid <= high) {
            switch (arr[mid]) {
                case 0:
                    swap(arr, low, mid);
                    low++;
                    mid++;
                    break;
                case 1:
                    mid++;
                    break;
                case 2:
                    swap(arr, mid, high);
                    high--;
                    break;
            }
        }
    }

    public static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public static void printArray(int[] arr) {
        for (int num : arr) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}


2)

public class MissingNumber {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3, 5};
        int[] arr2 = {6, 1, 2, 8, 3, 4, 7, 10, 5};

        System.out.println("Missing element in arr1: " + findMissingNumber(arr1, 5));
        System.out.println("Missing element in arr2: " + findMissingNumber(arr2, 10));
    }

    public static int findMissingNumber(int[] arr, int N) {
        int expectedSum = N * (N + 1) / 2;
        int actualSum = 0;

        for (int num : arr) {
            actualSum += num;
        }

        return expectedSum - actualSum;
    }
}

3)

public class MajorityElement {
    public static void main(String[] args) {
        int[] arr1 = {3, 3, 4, 2, 4, 4, 2, 4, 4};
        int[] arr2 = {1, 2, 3, 4, 5, 5, 5, 5, 5};

        System.out.println("Majority element in arr1: " + findMajorityElement(arr1));
        System.out.println("Majority element in arr2: " + findMajorityElement(arr2));
    }

    public static int findMajorityElement(int[] arr) {
        int majorityElement = arr[0];
        int count = 1;

        for (int i = 1; i < arr.length; i++) {
            if (arr[i] == majorityElement) {
                count++;
            } else {
                count--;
                if (count == 0) {
                    majorityElement = arr[i];
                    count = 1;
                }
            }
        }

        // Verify if the majority element is indeed the majority
        count = 0;
        for (int num : arr) {
            if (num == majorityElement) {
                count++;
            }
        }
        if (count > arr.length / 2) {
            return majorityElement;
        } else {
            return -1; // No majority element found
        }
    }
}


4)

import java.util.HashSet;

public class UnionOfArrays {
    public static void main(String[] args) {
        int[] a = {1, 2, 2, 3, 4};
        int[] b = {2, 3, 4, 5};

        System.out.println("Number of elements in the union: " + findUnionSize(a, b));
    }

    public static int findUnionSize(int[] a, int[] b) {
        HashSet<Integer> unionSet = new HashSet<>();

        // Add elements from array a to the union set
        for (int num : a) {
            unionSet.add(num);
        }

        // Add elements from array b to the union set
        for (int num : b) {
            unionSet.add(num);
        }

        return unionSet.size();
    }
}


